"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import environ
import os
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DATA_UPLOAD_MAX_NUMBER_FIELDS = 2000 # csv파일 수정 개수 제한
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

env = environ.Env(DEBUG=(bool, True))
environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, '.env.dev')
)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')
# DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'mealkid.kro.kr']
CSRF_TRUSTED_ORIGINS = ['https://mealkid.kro.kr',]

# HTTPS 사용 시 설정
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_AGE = 60 * 60 * 24 * 14

# 프록시 설정(Nginx)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "myaccount",
    "reader",
    "generator",
    'quiz',
    #'debug_toolbar',
    #"django.contrib.sites",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.naver',
    'allauth.socialaccount.providers.kakao',
    "mine",
    'review',
    'axes',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'axes.backends.AxesBackend',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "myaccount.custom_middleware.UserSessionMiddleware",  # 사용자 정의 미들웨어 추가
    "allauth.account.middleware.AccountMiddleware",
    'myaccount.profile_middleware.ProfileMiddleware',
    'axes.middleware.AxesMiddleware',
    #"debug_toolbar.middleware.DebugToolbarMiddleware",
]

#INTERNAL_IPS = ['127.0.0.1',] #temp
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#         'quiz': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }

ROOT_URLCONF = "mysite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates',
                 BASE_DIR / 'myaccount/templates',],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'myaccount.context_processors.profile_name',
            ],
        },
    },
]

SITE_ID = 1
SOCIALACCOUNT_LOGIN_ON_GET = True

SOCIALACCOUNT_PROVIDERS = {
    "kakao": {
        "APP": {
            "client_id": env('KAKAO_CLIENT_ID'),
            "secret": env('KAKAO_SECRET_SECRET'),
            "key": ""
        },
        "SCOPE": [
            "profile_nickname",
            "account_email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        }
    },
    "naver": {
        "APP": {
            "client_id": env('NAVER_CLIENT_ID'),
            "secret": env('NAVER_CLIENT_SECRET'),
            "key": ""
        },
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        }
    },
    "google": {
        "APPS": [
            {
                "client_id": env('GOOGLE_CLIENT_ID'),
                "secret": env('GOOGLE_CLIENT_SECRET'),
                "key": ""
            },
        ],
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
    }
}
OPENAI_API_KEY = env('OPENAI_API_KEY')
OPENAI_API_KEY_FOR_IMAGE_GEN = env('OPENAI_API_KEY_FOR_IMAGE_GEN')

WSGI_APPLICATION = "mysite.wsgi.application"

LOGIN_REDIRECT_URL = 'select_account'
# LOGOUT_REDIRECT_URL = 'index'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DEFAULT_USER_ID = 1
DEFAULT_PROFILE_ID = 1

DB_NAME = env('DB_NAME')
DB_USER = env('DB_USER')
DB_PASSWORD = env('DB_PASSWORD')
DB_HOST = env('DB_HOST')
DB_PORT = env('DB_PORT')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
        'OPTIONS': {
            'charset': 'utf8mb4',
            'use_unicode': True,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        "OPTIONS": {
            "user_attributes": ("username", "email")
        }
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 8,
        }
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / 'static',
                    BASE_DIR / 'generator/static',
                    BASE_DIR / 'reader/static',
                    BASE_DIR / 'quiz/static']
STATIC_ROOT = BASE_DIR / 'staticfiles'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' 
EMAIL_HOST = 'smtp.gmail.com' 
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

GOOGLE_APPLICATION_CREDENTIALS = env('GOOGLE_APPLICATION_CREDENTIALS')

# Axes 설정
AXES_FAILURE_LIMIT = 5  # 최대 실패 시도 횟수
AXES_COOLOFF_TIME = timedelta(minutes=10)  # 차단 기간
AXES_LOCKOUT_TEMPLATE = 'lockout.html'  # 차단 시 보여줄 템플릿
AXES_LOCKOUT_URL = '/locked-out/'  # 차단 시 리디렉션할 URL
AXES_RESET_ON_SUCCESS = True # 로그인 성공하면 차단 해제
AXES_LOCKOUT_PARAMETERS = [['ip_address', 'username']]